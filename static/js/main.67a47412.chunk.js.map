{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","className","href","email","name","CommentInfo","comment","body","CommentList","comments","map","id","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAEaA,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,8BACG,eAED,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,EAAKG,OAA7C,mBACMH,EAAKI,YCPFC,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACzB,sBAAKL,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,mBAA0CK,EAAQF,QAEjD,OAED,mBACEH,UAAU,qBACVC,KAAI,iBAAYI,EAAQH,OAF1B,mBAIMG,EAAQH,YAIhB,qBAAKF,UAAU,oBAAf,mBACMK,EAAQC,aCbLC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,qBAAKR,UAAU,cAAf,SACGQ,EAASC,KAAI,SAAAJ,GAAO,OACnB,cAAC,EAAD,CACEA,QAASA,GACJA,EAAQK,UCJRC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACtB,sBAAKZ,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,mBACMY,EAAKC,SAGX,cAAC,EAAD,CAAUd,KAAMa,EAAKb,UAGvB,mBAAGC,UAAU,iBAAb,mBACMY,EAAKN,QAGe,IAAzBM,EAAKJ,SAASM,OAEX,qCACE,uBAEA,mBAAG,UAAQ,oBAAX,gCAGF,cAAC,EAAD,CAAaN,SAAUI,EAAKJ,eCxBvBO,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKhB,UAAU,WAAf,SACGgB,EAAMP,KAAI,SAAAG,GAAI,OACb,cAAC,EAAD,CACEA,KAAMA,GACDA,EAAKF,UCQX,IAAMM,EAAQC,EAAgBR,KAAI,SAAAG,GAAI,kCACxCA,GADwC,IAE3Cb,MAVemB,EAUDN,EAAKM,OATZC,EAAgBC,MAAK,SAAArB,GAAI,OAAIA,EAAKW,KAAOQ,MAUhDV,UAPmBa,EAOGT,EAAKF,GANpBY,EAAmBC,QAAO,SAAAlB,GAAO,OAAIA,EAAQgB,SAAWA,QADjE,IAAqBA,EAJJH,KAcJM,EAAM,kBACjB,0BAASxB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUgB,MAAOA,QCrBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.67a47412.chunk.js","sourcesContent":["import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => (\n  <p>\n    {' Posted by  '}\n\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {`${user.name}`}\n    </a>\n  </p>\n);\n","export const CommentInfo = ({ comment }) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{`${comment.name}`}</strong>\n\n      {' by '}\n\n      <a\n        className=\"CommentInfo__email\"\n        href={`mailto:${comment.email}`}\n      >\n        {`${comment.email}`}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">\n      {`${comment.body}`}\n    </div>\n  </div>\n);\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  <div className=\"CommentList\">\n    {comments.map(comment => (\n      <CommentInfo\n        comment={comment}\n        key={comment.id}\n      />\n    ))}\n  </div>\n);\n","import './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentList } from '../CommentList';\n\nexport const PostInfo = ({ post }) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">\n        {`${post.title}`}\n      </h3>\n\n      <UserInfo user={post.user} />\n    </div>\n\n    <p className=\"PostInfo__body\">\n      {`${post.body}`}\n    </p>\n\n    {post.comments.length === 0\n      ? (\n        <>\n          <hr />\n\n          <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n        </>\n      ) : (\n        <CommentList comments={post.comments} />\n      )}\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        post={post}\n        key={post.id}\n      />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUser(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction getComments(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nexport const posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUser(post.userId),\n  comments: getComments(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}